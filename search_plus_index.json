{"./":{"url":"./","title":"知识库介绍","keywords":"","body":"知识库介绍 学科网前端知识库是一个内部使用的前端组件代码数据库。在这里，你可以查到平时使用的一些按钮、搜索框、弹出框等常用组件的代码，减少查找的麻烦。同时也会记录一些项目中的注意事项和需要长久保存的内容，减少沟通成本。 "},"markdown-chang-yong-yu-fa-can-kao.html":{"url":"markdown-chang-yong-yu-fa-can-kao.html","title":"MarkDown常用语法参考","keywords":"","body":"MarkDown常用语法参考 列表符号、链接 - 安装插件： - 更换主题： - 生成离线： 效果： 安装插件：https://toolchain.gitbook.com/plugins/ 更换主题：https://toolchain.gitbook.com/themes/ 生成离线：https://toolchain.gitbook.com/ebook.html 一级标题 代码： # 这是一级标题效果： 二级标题为两个#，1-6个，以此类推。 换行 在末尾敲两个空格。 嵌入代码 代码： `code` 效果：code 字体加粗 代码： **字体加粗** 效果：字体加粗 字体倾斜 代码： *字体倾斜* 效果： 字体倾斜 字体加粗又倾斜 代码： ***字体加粗又倾斜*** 效果：字体加粗又倾斜 插入图片 代码： ![](http://zxxkstatic.zxxk.com//zxxk/skins/index/images/Month/3.jpg) 效果： 插入链接 方式1-快捷方式 代码： 效果： http://www.zxxk.com 方式2-常规方式 代码： 这是一个[链接](http://www.zxxk.com \"这里是title属性的值\") 效果：这是一个链接 如果是链接到同一个主机，还可以使用相对路径链接中的内容还可以是页面上的ID，这样点击后可以定位到指定锚点 插入图片链接 代码： [![](http://zxxkstatic.zxxk.com//zxxk/skins/index/images/Month/3.jpg)](http://www.zxxk.com) 效果： 即：把链接代码前面的中括号里面写上一个图片 分割线 代码： 效果： 块引用 代码： This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.效果：This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. 代码块引用 代码(注意：首行有tab缩进)： tell application \"Foo\" beep end tell 效果： tell application \"Foo\" beep end tell 注意：代码开始部分和前面文字必须要有一个空行！ "},"yang-shi-zu-jian/":{"url":"yang-shi-zu-jian/","title":"样式组件","keywords":"","body":"样式组件 列出了学科网常用样式组件和代码。使用时需引入：http://zxxkstatic.zxxk.com/zxxk/skins/css/common.css "},"yang-shi-zu-jian/quan-ju-yang-shi.html":{"url":"yang-shi-zu-jian/quan-ju-yang-shi.html","title":"全局样式","keywords":"","body":"全局样式 学科网公共头部 专题的公共头部 关注我们 新浪微博 腾讯微博 关注官方微信 用户中心 我的消费 我要充值 宣传赚点 客户服务 帮助中心 在线客服 投诉中心 产品服务 网校通 视频通 e网通 e卷通 作业通 网学通 微校园 高考必备 学易直播 学易云 学易书城 小学英语宝 资源开放平台 智慧校园 旗下网站 中学学科网 小学学科网 组卷网 i幼教 教评网 小学组卷 中学期刊网 小学期刊网 /* head */ .head a:hover{ text-decoration:none;} .hd-guide,.sina,.blog{background:url(../images/hd-icon2.png) no-repeat;} .header{ height: 39px; border-bottom: 1px solid #f2f2f2; background-color: #f8f8f8; line-height:39px; font-size:12px;} .head{ width:1200px; margin:0 auto;} .head,.head a{ color: #666;} .head a.grey{ color:#999;} .head a:hover{ color:#1d7ad9;} .hd-logo{ display:block; width:210px; height:39px; padding-left:10px; background:url(http://www.zxxk.com/images/hd-logo.png) left center no-repeat;} .hd-subnav{ float:left; width:90px; height:28px; padding-top:12px; position:relative; text-align:center; z-index:300;} .hd-subnav.cur{ z-index:300;} .login-area{ padding-right:15px;} .hd-guide{ display:block; width:51px; height:15px; line-height:15px;border-left:1px solid #ccc; padding:0 24px 0 15px; background-position:69px -64px; cursor:pointer; overflow:hidden;} .hd-subnav ul{ width:89px; padding:5px 0; line-height:30px; border: solid 1px #e1e1e1; border-top:0; background-color:#f8f8f8; position:absolute; top:39px; left:0; z-index:301; display:none;} .abt-lk{ padding-right:5px;} .abt-lk a{ margin:0 12px;} .scan-code{ height:40px; position:relative;} .code-img i{ width:16px; height:8px; background:url(/images/hd-icon.png) no-repeat; background-position:0 -92px; position:absolute; top:-8px; left:110px;} .code-img{ width:202px; height:76px; padding:5px 10px 5px 7px; line-height:21px; background-color:#f8f8f8; border:1px solid #ccc; position:absolute; top:39px; left:-108px; display:none; overflow:visible;} .code-img p{ margin:10px 0 0 10px; font-size:14px; color:#444; line-height:22px; display:inline; padding:0; min-width:115px;} .sina{ background-position:7px 7px; text-indent:15px;} .blog{ background-position:7px -29px; text-indent:15px;} .evm{ height:76px; overflow:hidden;} .lg-info{ margin-right:20px;} .wt-sld ul li{ float:left; width:50%; text-align:center;} .wt-sld ul{ width:180px;} /**end head**/ 专题底部 Copyright 2003-2018 All Rights Reserved. 学科网版权所有 京ICP备12013499 学科网 zxxk.com 版权所有 京ICP备12013499号 京ICP证080135号 北京市公安局海淀分局备案号：1101081948 /**footer**/ .footer{ text-align:center; color:#fff; line-height:26px; padding:45px 0;} /**footer end**/ 右侧顶部按钮 网校通 充值 上传 购物篮 资源篮 0 共 0份资料 资源篮中还没有资源，赶紧挑选吧！ 竖分割线 首页楼层标题和导航 名校资源 苏 沪 粤 鲁 浙 京 湘 川 闽 皖 冀 豫 鄂 赣 陕 渝 桂 晋 吉 辽 黑 蒙 宁 新 更多 楼层快捷导航 html： 推荐 名校 精品 视频 最新 专辑 资讯 合作校 事件处理程序： /** * 左侧导航反向定位事件 */ quickNavHandler: function() { //滚动下来350左侧快捷菜单才显示 var stp = $(this).scrollTop() stp > 350 ? $('.gofloor').fadeIn(300) : $('.gofloor').fadeOut(300); //反向定位 var floorNames = ['djtj', 'mxzy', 'jpzy', 'spzy', 'jxzj', 'jyzx', 'hzxfc']; $(floorNames).each(function(index, cardName) { $('.section-' + cardName + '').offset() && stp >= $('.section-' + cardName).offset().top && $('.gofloor [target=' + cardName + ']').addClass('current').siblings().removeClass('current'); }) } /** * 左侧快捷导航点击 */ initLeftNav: function() { var self = this; $('.gofloor p').click(function() { $(window).unbind('scroll', self.quickNavHandler); var cardName = $(this).attr('target'); $(this).siblings().removeClass('current'); $(this).addClass('current'); $('body,html').animate({ scrollTop: $('.section-' + cardName).offset().top }, 700, 'swing'); setTimeout(function() { $(window).scroll(self.quickNavHandler); }, 800); }); } 资料类型图标-PC端 .type-icon {float:left;display:inline-block;width:57px;height:70px;background:url(\"../../assets/img/type-icon.png\") no-repeat;position:relative} .type-icon.doc {background-position:0 0} .type-icon.xls {background-position:0 -70px} .type-icon.ppt {background-position:0 -140px} .type-icon.swf {background-position:0 -210px} .type-icon.mp3 {background-position:0 -280px} .type-icon.flv {background-position:0 -210px} .type-icon.pdf {background-position:0 -350px} .type-icon.rar {background-position:0 -420px} .type-icon.other {background-position:0 -490px} .type-icon i {background-image:url(\"../../assets/img/type_num.png\");background-repeat:no-repeat;background-position:center center;position:absolute;width:36px;height:20px;left:-3px;top:5px} .type-icon i.type-1 {background-position:0 0} .type-icon i.type-2 {background-position:0 -27px} .type-icon i.type-3 {background-position:0 -55px} .type-icon i.type-4 {background-position:0 -82px} .type-icon i.type-6 {background-position:0 -109px} .type-icon i.type-7 {background-position:0 -137px} .type-icon i.type-8 {background-position:0 -164px} .type-icon i.type-9 {background-position:0 -191px} 资料类型图标-PC端-14像素 资料类型图标-手机端 .icon-word .icon-excel .icon-ppt .icon-zip .icon-pdf .icon-mp3 .icon-shipin .icon-img .icon-zuanji .icon-q 资料类型-小程序 word video ppt img pdf compress excel default gif audio 备注：需引入iconfont字体，所属项目为M_zxxk项目。 "},"yang-shi-zu-jian/biao-dan.html":{"url":"yang-shi-zu-jian/biao-dan.html","title":"表单","keywords":"","body":"表单 输入框 按钮 "},"yang-shi-zu-jian/cha-jian.html":{"url":"yang-shi-zu-jian/cha-jian.html","title":"插件","keywords":"","body":"插件 CDN: HTML: JS: var particleSet = { \"particles\": { \"number\": { \"value\": 130, \"density\": { \"enable\": true, \"value_area\": 1000 } }, \"color\": { \"value\": \"random\" }, \"shape\": { \"type\": \"circle\", \"stroke\": { \"width\": 0, \"color\": \"#000000\" }, \"polygon\": { \"nb_sides\": 5 }, \"image\": { \"src\": \"img/github.svg\", \"width\": 100, \"height\": 100 } }, \"opacity\": { \"random\": true, \"anim\": { \"enable\": true, \"speed\": 2, \"opacity_min\": 0.1, \"sync\": false } }, \"size\": { \"value\": 3, \"random\": true, \"anim\": { \"enable\": true, \"speed\": 5, \"size_min\": 0.1, \"sync\": false } }, \"line_linked\": { \"enable\": true, \"distance\": 150, \"color\": \"#ffffff\", \"opacity\": 0.4, \"width\": 1 }, \"move\": { \"enable\": true, \"speed\": 1, \"direction\": \"none\", \"random\": false, \"straight\": false, \"out_mode\": \"out\", \"bounce\": false, \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 } } }, \"interactivity\": { \"detect_on\": \"canvas\", \"events\": { \"onhover\": { \"enable\": true, \"mode\": \"grab\" }, \"onclick\": { \"enable\": true, \"mode\": \"push\" }, \"resize\": true }, \"modes\": { \"grab\": { \"distance\": 140, \"line_linked\": { \"opacity\": 1 } }, \"bubble\": { \"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3 }, \"repulse\": { \"distance\": 200, \"duration\": 0.4 }, \"push\": { \"particles_nb\": 4 }, \"remove\": { \"particles_nb\": 2 } } }, \"retina_detect\": true }; particlesJS('particles-js', particleSet); 参数配置说明： 键值 参数选项/ 说明 实例 particles.number.value number 数量 40 particles.number.density.enable boolean true / false particles.number.density.value_area number 区域散布密度大小 800 particles.color.value HEX (string) RGB (object) HSL (object) array selection (HEX) random (string)原子的颜色 \"#b61924\" {r:182, g:25, b:36} {h:356, s:76, l:41} [\"#b61924\", \"#333333\", \"999999\"] \"random\" particles.shape.type string array selection 原子的形状 \"circle\" \"edge\" \"triangle\" \"polygon\" \"star\" \"image\" [\"circle\", \"triangle\", \"image\"] particles.shape.stroke.width number 原理的宽度 2 particles.shape.stroke.color HEX (string) 原子颜色 \"#222222\" particles.shape.polygon.nb_slides number 原子的多边形边数 5 particles.shape.image.src path link svg / png / gif / jpg 原子的图片可以使用自定义图片 \"assets/img/yop.svg\" \"http://mywebsite.com/assets/img/yop.png\" particles.shape.image.width number (for aspect ratio) 图片宽度 100 particles.shape.image.height number (for aspect ratio) 图片高度 100 particles.opacity.value number (0 to 1) 不透明度 0.75 particles.opacity.random boolean 随机不透明度 true / false particles.opacity.anim.enable boolean 渐变动画 true / false particles.opacity.anim.speed number 渐变动画速度 3 particles.opacity.anim.opacity_min number (0 to 1) 渐变动画不透明度 0.25 particles.opacity.anim.sync boolean true / false particles.size.value number 原子大小 20 particles.size.random boolean 原子大小随机 true / false particles.size.anim.enable boolean 原子渐变 true / false particles.size.anim.speed number 原子渐变速度 3 particles.size.anim.size_min number 0.25 particles.size.anim.sync boolean true / false particles.line_linked.enable boolean 连接线 true / false particles.line_linked.distance number 连接线距离 150 particles.line_linked.color HEX (string) 连接线颜色 #ffffff particles.line_linked.opacity number (0 to 1) 连接线不透明度 0.5 particles.line_linked.width number 连接线的宽度 1.5 particles.move.enable boolean 原子移动 true / false particles.move.speed number 原子移动速度 4 particles.move.direction string 原子移动方向 \"none\" \"top\" \"top-right\" \"right\" \"bottom-right\" \"bottom\" \"bottom-left\" \"left\" \"top-left\" particles.move.random boolean 移动随机方向 true / false particles.move.straight boolean 直接移动 true / false particles.move.out_mode string (out of canvas) 是否移动出画布 \"out\" \"bounce\" particles.move.bounce boolean (between particles) 是否跳动移动 true / false particles.move.attract.enable boolean 原子之间吸引 true / false particles.move.attract.rotateX number 原子之间吸引X水平距离 3000 particles.move.attract.rotateY number y垂直距离 1500 interactivity.detect_on string 原子之间互动检测 \"canvas\", \"window\" interactivity.events.onhover.enable boolean 悬停 true / false interactivity.events.onhover.mode string array selection悬停模式 \"grab\" 抓取临近的 \"bubble\" 泡沫球效果 \"repulse\" 击退效果 [\"grab\", \"bubble\"] interactivity.events.onclick.enable boolean 点击效果 true / false interactivity.events.onclick.mode string array selection点击效果模式 \"push\" \"remove\" \"bubble\" \"repulse\" [\"push\", \"repulse\"] interactivity.events.resize boolean 互动事件调整 true / false interactivity.events.modes.grab.distance number 原子互动抓取距离 100 interactivity.events.modes.grab.line_linked.opacity number (0 to 1) 原子互动抓取距离连线不透明度 0.75 interactivity.events.modes.bubble.distance number 原子抓取泡沫效果之间的距离 100 interactivity.events.modes.bubble.size number 原子抓取泡沫效果之间的大小 40 interactivity.events.modes.bubble.duration number 原子抓取泡沫效果之间的持续事件 (second) 0.4 interactivity.events.modes.repulse.distance number 击退效果距离 200 interactivity.events.modes.repulse.duration number 击退效果持续事件 (second) 1.2 interactivity.events.modes.push.particles_nb number 粒子推出的数量 4 interactivity.events.modes.push.particles_nb number 4 retina_detect boolean true / false 效果： var particleSet = { \"particles\": { \"number\": { \"value\": 130, \"density\": { \"enable\": true, \"value\\_area\": 1000 } }, \"color\": { \"value\": \"random\" }, \"shape\": { \"type\": \"circle\", \"stroke\": { \"width\": 0, \"color\": \"\\#000000\" }, \"polygon\": { \"nb\\_sides\": 5 }, \"image\": { \"src\": \"img/github.svg\", \"width\": 100, \"height\": 100 } }, \"opacity\": { \"random\": true, \"anim\": { \"enable\": true, \"speed\": 2, \"opacity\\_min\": 0.1, \"sync\": false } }, \"size\": { \"value\": 3, \"random\": true, \"anim\": { \"enable\": true, \"speed\": 5, \"size\\_min\": 0.1, \"sync\": false } }, \"line\\_linked\": { \"enable\": true, \"distance\": 150, \"color\": \"\\#ffffff\", \"opacity\": 0.4, \"width\": 1 }, \"move\": { \"enable\": true, \"speed\": 1, \"direction\": \"none\", \"random\": false, \"straight\": false, \"out\\_mode\": \"out\", \"bounce\": false, \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 } } }, \"interactivity\": { \"detect\\_on\": \"canvas\", \"events\": { \"onhover\": { \"enable\": true, \"mode\": \"grab\" }, \"onclick\": { \"enable\": true, \"mode\": \"push\" }, \"resize\": true }, \"modes\": { \"grab\": { \"distance\": 140, \"line\\_linked\": { \"opacity\": 1 } }, \"bubble\": { \"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3 }, \"repulse\": { \"distance\": 200, \"duration\": 0.4 }, \"push\": { \"particles\\_nb\": 4 }, \"remove\": { \"particles\\_nb\": 2 } } }, \"retina\\_detect\": true };particlesJS('particles', particleSet); "},"m-zxxk2.0/":{"url":"m-zxxk2.0/","title":"M站改版","keywords":"","body":"新版学科网M站（m-zxxk2.0）利用了vue作为视图渲染引擎，利用nuxt实现了后端渲染，再加上其他诸如webpack的一些技术，实现了在保证SEO友好的情况下的前后端分离模式开发。这里将其中用到的一些概念加以说明。 "},"m-zxxk2.0/zheng-ti-jia-gou.html":{"url":"m-zxxk2.0/zheng-ti-jia-gou.html","title":"整体架构","keywords":"","body":"整体架构 整体采用vue+vuex+vue-router+nuxt+webpack+es6+es8+eslint+nginx+pm2的技术架构。vue用作数据和视图引擎，vuex作为全局状态管理工具，vue-router用来管理路由跳转和参数传递，nuxt作为后端渲染引擎，webpack打包构建，es6模块化，同时也用到了es8的部分异步编程语法，eslint代码格式规范检查，nginx反向代理和解决跨域问题，pm2守护node线程和记录ssr日志。各技术之间的依赖整合关系如下： vue 采用vue2.5.17作为数据和视图引擎，利用vue-cli3的脚手架进行搭建，具体技术细节可参考vue-cli3官网：https://cli.vuejs.org/zh/guide/，在此之前需要有vue使用的基础，vue基础部分请参考vue官网：https://cn.vuejs.org/v2/guide/。 vuex 采用vuex作为全局状态管理工具，具体文档请参考官网：https://vuex.vuejs.org/zh/guide/ vue-router 采用vue-router管理路由切换和值传递，具体文档请参考官网：https://router.vuejs.org/zh/guide/ nuxt nuxt2.3.4（集成了vue2.5.17）作为ssr框架，实现后端渲染，从而对搜索引擎友好。具体技术细节参考nuxt官网：https://zh.nuxtjs.org/guide。nuxt和vue的关系如下： m-zxxk@1.0.0 /Users/zks/code/gitlab/m-zxxk2.0/web └─┬ nuxt@2.3.4 └─┬ @nuxt/core@2.3.4 └─┬ @nuxt/vue-renderer@2.3.4 └── vue@2.5.17 webpack nuxt也集成了对webpack的支持并且开放了扩展接口，webpack的配置方法参考官网：https://www.webpackjs.com/，项目中的用法参考nuxt.config.js文件。 es6 项目编码采用es6语法标准，es6语法规范可以参考这篇书籍：http://es6.ruanyifeng.com/#README。项目模块化部分采用es6的最新标准，用export和import来定义和导入模块，利用babel进行转义和打包（框架中已集成）。 es8 主要用到了es8的async和await异步编程语法，解决异步回调地狱问题。 eslint 采用了es-lint进行代码格式的规范和格式化，编译时不规范的代码将会报错，并可结合开发工具进行按要求的格式化，也可以用命令来自动修复不规范的代码。代码规范遵循vue/recommended规则。具体规则细节查看https://vuejs.github.io/eslint-plugin-vue/rules/ nginx nginx用来配置反向代理，同时解决跨域访问的问题(项目中同时也集成了CORS的解决方案)。通过配置虚拟映射，nginx同时起到了解决新旧M站之间平滑过渡的跳转问题。 nginx在生产环境也起到了负载均衡的作用。具体nginx配置请查看环境配置章节。 pm2 pm2用来解决在生产服务器上的node线程的守护和管理问题，例如启动、重启、监控等。pm2同时用来解决生产服务器上SSR部分代码的日志记录问题，以便问题发生时快速定位。 其他模块 其他模块请参考项目中的package.json文件，里面记录了项目中所有用到的模块和依赖，例如jsonp模块，用来兼容旧代码中支付部分的jsonp请求。详细用法请参考其官网：https://www.npmjs.com/package/jsonp。 网络图 生产环境中新旧系统之间的关系如下： "},"m-zxxk2.0/huan-jing-pei-zhi.html":{"url":"m-zxxk2.0/huan-jing-pei-zhi.html","title":"环境配置","keywords":"","body":"重要参数 测试环境 测试环境nginx：10.1.5.69测试服务器：10.1.1.40，端口3000 生产环境 生产环境nginx: 112.124.52.241生产服务器1：120.55.101.59，对应内网ip： 10.117.209.210，端口3000生产服务器2：121.41.77.58，对应内网ip：10.168.229.119，端口3000 Node.js 不管是开发、测试还是生产环境，都需要首先安装Node.js。Node.js是后端渲染和npm模块管理的重要前提。Node.js的安装和npm的使用在上次gulp的使用方法培训中已经讲过，可以登录oa后下载查看这个课件：http://oa.zxxk.com/kindeditor/attached/2018/12/file/20181206170422_3934.pptx 开发环境 开发环境需要完整模拟测试和生产环境（除了启动方式），需要在本地安装nginx，配置host和dns。 nginx配置 nginx的server节点的配置如下： server { listen 80; server_name m2.zxxk.com; location /_nuxt/ { proxy_pass http://127.0.0.1:3000/_nuxt/; } location /__webpack_hmr/ { proxy_pass http://127.0.0.1:3000/__webpack_hmr/; } location ~* ^/soft/(\\d+).html { set $softid $1; if ($query_string ~* \"^t=v$\" ){ proxy_pass http://10.1.1.40:9002/soft/$softid.html; } proxy_pass http://127.0.0.1:3000/soft/$softid; } location /api/ { proxy_pass http://10.1.1.40:18121/api/; } } host配置 需要在本地host文件添加映射：127.0.0.1 m2.zxxk.com dns配置 需要设置本机dns为10.1.1.3 代码环境 首先将代码拉取到本地：git clone http://git.corp.zxxk.com/m/m-zxxk2.0.git然后cd进入项目web目录下，安装项目依赖：npm i启动开发服务器，实时监控代码并实现热重载：npm run dev在浏览器中输入http://m2.zxxk.com:3000/soft/65656.html即可访问 测试环境配置 测试环境需要安装pm2。 pm2安装和配置 第一步，全局安装pm2：npm i -g pm2第二步，全局安装pm2日志组件：pm2 install pm2-logrotate第三步，设置日志参数，这里设置了日志的最大体积达到100M会自动分割文件，数量超过365个时会自动删除之前的旧文件：pm2 set pm2-logrotate:max_size 100Mpm2 set pm2-logrotate:retain 365 nginx配置 测试环境和研一共用一个nginx，服务器ip为10.1.5.69，所用配置文件和本地的配置基本相同。 host配置 需要将测试服务器解析指向测试的nginx服务器： 10.1.5.69 m2.zxxk.com 代码环境 测试环境服务器ip为10.1.1.40。首先进入项目根目录：D:\\gitlab\\m-zxxk2.0\\web更新代码：git pull如果有新增npm包需要执行安装：npm i进行构建：npm run build 第一次启动服务： pm2 start startup.js 之后每次更新无需重启，只需在git pull和npm run build之后，执行：pm2 reload all即可。 访问测试环境 如果要在本地访问测试环境，只需修改dns配置为10.1.1.3即可。访问地址为http://m2.zxxk.com。注意：如果更改了host文件，需要删除host文件中m2.zxxk.com的配置。 生产环境 生产环境采用分布式部署，分别在120.55.101.59和121.41.77.58上各自启动一个节点，通过nginx配置负载均衡。生产环境配置和测试服务器的完全一样。唯一不同的是nginx配置。 nginx配置 nginx部署在112.124.52.241上，所用配置为： location ~* ^/soft/(\\d+).html { set $softid $1; if ($http_user_agent ~* \"360spider|qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot\") { proxy_pass http://Msoft-pachong; } if ($query_string ~* \"^t=v$\" ){ proxy_pass http://newM/soft/$softid.html; } proxy_pass http://newM2/soft/$softid; } location /_nuxt/ { proxy_pass http://newM2; } upstream newM2 { server 10.117.209.210:3000 max_fails=5 fail_timeout=30s; server 10.168.229.119:3000 max_fails=5 fail_timeout=30s; } "},"m-zxxk2.0/debug.html":{"url":"m-zxxk2.0/debug.html","title":"调试方法","keywords":"","body":"调试方法 前端代码 前端代码同之前的调试方式，用google浏览器开发者工具即可调试。 SSR部分 这部分是重点。由于SSR部分代码运行在node环境下，对浏览器不透明（实际上也可以通过google浏览器调试，但这里介绍最常用的方法），我们可以利用vscode强大的node调试功能，来调试这部分代码。 vscode配置 用vscode打开项目之后，点击顶部工具栏中的调试-->打开配置，将内容替换为以下部分： { \"version\": \"0.2.0\", \"configurations\": [ { \"type\": \"node\", \"request\": \"attach\", \"name\": \"Attach\", \"port\": 9229 } ] } 代码 在要调试的ssr部分代码中打上断点，例如： asyncData({params}) { debugger; let softId = params.softId; } 启动命令 在项目的package.json中配置debug启动命令： \"dev-debug\": \"node --inspect node_modules/.bin/nuxt\" 然后启动： npm run dev-debug 这时候会通过websocket协议暴漏出9229端口，供vscode监听。 执行调试 在vscode中按F5执行调试，此时会监听到9229端口，然后刷新页面，vscode便会自动进入断点，即可进行单步调试，如图： "},"m-zxxk2.0/pm2.html":{"url":"m-zxxk2.0/pm2.html","title":"pm2常用命令","keywords":"","body":"pm2常用命令 启动服务 pm2 start appName|id|all 停止服务 pm2 stop appName|id|all 重载服务 该命令常用，因为可以实现0s无缝重启，类似nginx reloadpm2 reload appName|id|all 重启服务 该命令不常用，一般用pm2 reload apppm2 restart appName|id|all 删除服务 pm2 delete appName|id|all 列出所有进程列表 常用pm2 list 查看所有进程的状态 pm2 status 监控 常用pm2 monit 显示某个进程的详情 pm2 show appName|id "},"she-ji-gui-fan/":{"url":"she-ji-gui-fan/","title":"设计规范","keywords":"","body":"设计规范 设计规范介绍 列表符号、链接 - 安装插件： - 更换主题： - 生成离线： 效果： 安装插件：https://toolchain.gitbook.com/plugins/ 更换主题：https://toolchain.gitbook.com/themes/ 生成离线：https://toolchain.gitbook.com/ebook.html 一级标题 代码： # 这是一级标题效果： 这是一级标题 二级标题为两个#，1-6个，以此类推。 换行 在末尾敲两个空格。 嵌入代码 代码： `code` 效果：code 字体加粗 代码： **字体加粗** 效果：字体加粗 字体倾斜 代码： *字体倾斜* 效果： 字体倾斜 字体加粗又倾斜 代码： ***字体加粗又倾斜*** 效果：字体加粗又倾斜 插入图片 代码： ![](http://zxxkstatic.zxxk.com//zxxk/skins/index/images/Month/3.jpg) 效果： 插入链接 方式1-快捷方式 代码： 效果： https://github.com/zitiaocn/simple 方式2-常规方式 代码： 这是一个[链接](https://github.com/zitiaocn/simple \"这里是title属性的值\") 效果：这是一个链接 如果是链接到同一个主机，还可以使用相对路径链接中的内容还可以是页面上的ID，这样点击后可以定位到指定锚点 插入图片链接 代码： [![](http://zxxkstatic.zxxk.com//zxxk/skins/index/images/Month/3.jpg)](https://github.com/zitiaocn/simple) 效果： 即：把链接代码前面的中括号里面写上一个图片 分割线 代码： 效果： 块引用 代码： This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.效果：This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. 代码块引用 代码： tell application \"Foo\" beep end tell 效果： tell application \"Foo\" beep end tell 注意：代码开始部分和前面文字必须要有一个空行！ "},"she-ji-gui-fan/zhang-jie-1.html":{"url":"she-ji-gui-fan/zhang-jie-1.html","title":"章节1","keywords":"","body":"章节1 设计规范章节1 待定1 "},"she-ji-gui-fan/zhang-jie-2.html":{"url":"she-ji-gui-fan/zhang-jie-2.html","title":"章节2","keywords":"","body":"章节2 设计规范章节2 待定 "}}